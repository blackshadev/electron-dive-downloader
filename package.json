{
  "name": "electron-dive-downloader",
  "description": "Download dives from any divecomputer with an electron app",
  "productName": "DiveDownloader",
  "main": "./src/main/main.ts",
  "scripts": {
    "build": "concurrently \"yarn build:main\" \"yarn build:renderer\"",
    "build:main": "cross-env NODE_ENV=production TS_NODE_TRANSPILE_ONLY=true webpack --config ./.erb/configs/webpack.config.main.prod.ts",
    "build:renderer": "cross-env NODE_ENV=production TS_NODE_TRANSPILE_ONLY=true webpack --config ./.erb/configs/webpack.config.renderer.prod.ts",
    "postinstall": "ts-node .erb/scripts/check-native-dep.js && electron-builder install-app-deps && cross-env NODE_ENV=development TS_NODE_TRANSPILE_ONLY=true webpack --config ./.erb/configs/webpack.config.renderer.dev.dll.ts",
    "lint": "cross-env NODE_ENV=development eslint . --ext .js,.jsx,.ts,.tsx",
    "lint:fix": "cross-env NODE_ENV=development eslint . --cache --fix --ext .js,.jsx,.ts,.tsx",
    "package": "ts-node ./.erb/scripts/clean.js dist && npm run build && electron-builder build --publish never",
    "start": "ts-node ./.erb/scripts/check-port-in-use.js && npm run start:renderer",
    "start:main": "cross-env NODE_ENV=development electronmon -r ts-node/register/transpile-only .",
    "start:preload": "cross-env NODE_ENV=development TS_NODE_TRANSPILE_ONLY=true webpack --config ./.erb/configs/webpack.config.preload.dev.ts",
    "start:renderer": "cross-env NODE_ENV=development TS_NODE_TRANSPILE_ONLY=true webpack serve --config ./.erb/configs/webpack.config.renderer.dev.ts",
    "test": "jest",
    "package:publish": "rm -rf src/dist && yarn build && electron-builder build --publish=always",
    "prepare": "husky install"
  },
  "lint-staged": {
    "*.{js,jsx,ts,tsx}": [
      "cross-env NODE_ENV=development eslint --cache"
    ],
    "{*.json,.{eslintrc,prettierrc}}": [
      "prettier --ignore-path .eslintignore --parser json --write"
    ],
    "*.{css,scss}": [
      "prettier --ignore-path .eslintignore --single-quote --write"
    ],
    "*.{html,md,yml}": [
      "prettier --ignore-path .eslintignore --single-quote --write"
    ]
  },
  "build": {
    "productName": "DiveDownloader",
    "appId": "nl.littledev.DiveDownloader",
    "asar": true,
    "asarUnpack": "**\\*.{node,dll}",
    "files": [
      "dist/",
      "node_modules/",
      "package.json"
    ],
    "afterSign": ".erb/scripts/Notarize.js",
    "mac": {
      "target": [
        "dmg"
      ],
      "type": "distribution",
      "hardenedRuntime": true,
      "entitlements": "assets/entitlements.mac.plist",
      "entitlementsInherit": "assets/entitlements.mac.plist",
      "gatekeeperAssess": false,
      "category": "public.app-category.utilities"
    },
    "dmg": {
      "contents": [
        {
          "x": 130,
          "y": 220
        },
        {
          "x": 410,
          "y": 220,
          "type": "link",
          "path": "/Applications"
        }
      ]
    },
    "win": {
      "target": [
        "nsis"
      ]
    },
    "linux": {
      "target": [
        "AppImage"
      ],
      "category": "Utility"
    },
    "directories": {
      "app": "release/app",
      "buildResources": "assets",
      "output": "release/build"
    },
    "extraResources": [
      "./assets/**"
    ],
    "publish": {
      "provider": "github",
      "owner": "blackshadev",
      "repo": "electron-dive-downloader"
    }
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/blackshadev/electron-dive-downloader.git"
  },
  "author": {
    "name": "Littledev",
    "email": "info@littledev.nl",
    "url": "https://littledev.nl"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/blackshadev/electron-dive-downloader/issues"
  },
  "keywords": [],
  "homepage": "https://littledev.nl",
  "jest": {
    "testURL": "http://localhost/",
    "moduleNameMapper": {
      "\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2|mp4|webm|wav|mp3|m4a|aac|oga)$": "<rootDir>/.erb/mocks/fileMock.js",
      "\\.(css|less|sass|scss)$": "identity-obj-proxy"
    },
    "moduleFileExtensions": [
      "js",
      "jsx",
      "ts",
      "tsx",
      "json"
    ],
    "moduleDirectories": [
      "node_modules",
      "release/app/node_modules"
    ],
    "setupFiles": [
      "./.erb/scripts/CheckBuildsExist.js"
    ]
  },
  "devDependencies": {
    "@pmmmwh/react-refresh-webpack-plugin": "^0.5.6",
    "@svgr/webpack": "^6.2.1",
    "@tailwindcss/postcss7-compat": "^2.2.17",
    "@teamsupercell/typings-for-css-modules-loader": "^2.5.1",
    "@testing-library/jest-dom": "^5.16.4",
    "@testing-library/react": "^13.2.0",
    "@types/enzyme": "^3.10.12",
    "@types/enzyme-adapter-react-16": "^1.0.6",
    "@types/history": "5.0.0",
    "@types/jest": "^27.5.1",
    "@types/node": "17.0.33",
    "@types/react": "^18.0.9",
    "@types/react-dom": "^18.0.4",
    "@types/react-redux": "^7.1.24",
    "@types/react-router-dom": "^5.3.3",
    "@types/react-test-renderer": "^18.0.0",
    "@types/redux-saga": "^0.10.5",
    "@types/styled-components": "^5.1.25",
    "@types/webpack-env": "^1.16.4",
    "@typescript-eslint/eslint-plugin": "^5.23.0",
    "@typescript-eslint/parser": "^5.23.0",
    "autoprefixer": "^10.4.7",
    "browserslist-config-erb": "^0.0.3",
    "chalk": "^4.1.2",
    "concurrently": "^7.2.0",
    "core-js": "^3.22.5",
    "cross-env": "^7.0.3",
    "css-loader": "^6.7.1",
    "css-minimizer-webpack-plugin": "^3.4.1",
    "detect-port": "^1.3.0",
    "electron": "^18.2.3",
    "electron-builder": "^23.0.3",
    "electron-devtools-installer": "git+https://github.com/MarshallOfSound/electron-devtools-installer.git",
    "electron-notarize": "^1.2.1",
    "electron-rebuild": "^3.2.7",
    "electronmon": "^2.0.2",
    "enzyme": "^3.11.0",
    "enzyme-adapter-react-16": "^1.15.6",
    "enzyme-to-json": "^3.6.2",
    "eslint": "^8.15.0",
    "eslint-config-airbnb-base": "^15.0.0",
    "eslint-config-erb": "^4.0.3",
    "eslint-config-prettier": "^8.5.0",
    "eslint-import-resolver-typescript": "^2.7.1",
    "eslint-import-resolver-webpack": "^0.13.2",
    "eslint-plugin-compat": "^4.0.2",
    "eslint-plugin-import": "^2.26.0",
    "eslint-plugin-jest": "^26.2.2",
    "eslint-plugin-jsx-a11y": "^6.5.1",
    "eslint-plugin-promise": "^6.0.0",
    "eslint-plugin-react": "^7.29.4",
    "eslint-plugin-react-hooks": "^4.5.0",
    "file-loader": "^6.0.0",
    "html-webpack-plugin": "^5.5.0",
    "husky": "^8.0.1",
    "identity-obj-proxy": "^3.0.0",
    "jest": "^28.1.0",
    "lint-staged": "^12.4.1",
    "mini-css-extract-plugin": "^2.6.0",
    "node-sass": "^7.0.1",
    "opencollective-postinstall": "^2.0.3",
    "polished": "^4.2.2",
    "postcss": "^8.4.13",
    "postcss-loader": "^6.2.1",
    "prettier": "^2.6.2",
    "react-refresh": "^0.13.0",
    "react-test-renderer": "^18.1.0",
    "rimraf": "^3.0.0",
    "sass-loader": "^12.6.0",
    "style-loader": "^3.3.1",
    "tailwindcss": "^3.0.24",
    "terser-webpack-plugin": "^5.3.1",
    "ts-loader": "^9.3.0",
    "ts-node": "^10.7.0",
    "typescript": "^4.6.4",
    "url-loader": "^4.1.0",
    "webpack": "^5.72.1",
    "webpack-bundle-analyzer": "^4.5.0",
    "webpack-cli": "^4.9.2",
    "webpack-dev-server": "^4.9.0",
    "webpack-merge": "^5.8.0",
    "yarn-deduplicate": "^5.0.0"
  },
  "dependencies": {
    "@reduxjs/toolkit": "^1.8.1",
    "electron-debug": "^3.2.0",
    "electron-log": "^4.4.7",
    "electron-updater": "^5.0.1",
    "history": "^5.3.0",
    "libdivecomputerjs": "^0.4.3",
    "react": "^18.1.0",
    "react-dom": "^18.1.0",
    "react-redux": "^8.0.1",
    "react-router-dom": "^6.3.0",
    "redux-saga": "^1.1.3",
    "regenerator-runtime": "^0.13.9",
    "source-map-support": "^0.5.21",
    "styled-components": "^5.3.5"
  },
  "devEngines": {
    "node": ">=10.x",
    "npm": ">=6.x",
    "yarn": ">=1.21.3"
  },
  "browserslist": [],
  "prettier": {
    "overrides": [
      {
        "files": [
          ".prettierrc",
          ".eslintrc"
        ],
        "options": {
          "parser": "json"
        }
      }
    ],
    "singleQuote": true
  },
  "renovate": {
    "extends": [
      "bliss"
    ],
    "baseBranches": [
      "next"
    ]
  },
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged"
    }
  },
  "electronmon": {
    "patterns": [
      "!**/**",
      "src/main/*"
    ],
    "logLevel": "quiet"
  }
}
